[{"C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\index.js":"1","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\reportWebVitals.js":"2","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\App.js":"3","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\routes.js":"4","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\hooks\\auth.hook.js":"5","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\components\\Loader.js":"6","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\components\\BreadCrumb.js":"7","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\context\\AuthContext.js":"8","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\components\\Navibar.js":"9","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\pages\\DetailPage.js":"10","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\pages\\HomePage.js":"11","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\pages\\AuthPage.js":"12","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\pages\\CabinetPage.js":"13","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\hooks\\http.hook.js":"14","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\components\\LinkCard.js":"15","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\components\\LinksList.js":"16","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\components\\TableCard.js":"17"},{"size":517,"mtime":1626802223577,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1626802223578,"results":"20","hashOfConfig":"19"},{"size":930,"mtime":1626803632581,"results":"21","hashOfConfig":"19"},{"size":1114,"mtime":1626802223579,"results":"22","hashOfConfig":"19"},{"size":932,"mtime":1626802223548,"results":"23","hashOfConfig":"19"},{"size":204,"mtime":1626802223547,"results":"24","hashOfConfig":"19"},{"size":1072,"mtime":1626802223546,"results":"25","hashOfConfig":"19"},{"size":203,"mtime":1626802223548,"results":"26","hashOfConfig":"19"},{"size":2451,"mtime":1626803632582,"results":"27","hashOfConfig":"19"},{"size":1002,"mtime":1626802223578,"results":"28","hashOfConfig":"19"},{"size":6942,"mtime":1626802223578,"results":"29","hashOfConfig":"19"},{"size":3518,"mtime":1626803632583,"results":"30","hashOfConfig":"19"},{"size":5630,"mtime":1626961408313,"results":"31","hashOfConfig":"19"},{"size":1047,"mtime":1626802223549,"results":"32","hashOfConfig":"19"},{"size":556,"mtime":1626802223546,"results":"33","hashOfConfig":"19"},{"size":1349,"mtime":1626802223546,"results":"34","hashOfConfig":"19"},{"size":801,"mtime":1626961896420,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1k529qq",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\index.js",[],["76","77"],"C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\reportWebVitals.js",[],"C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\App.js",["78"],"import React from 'react'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {useRoutes} from './routes'\r\nimport useAuth from './hooks/auth.hook'\r\nimport  Navibar  from './components/Navibar'\r\nimport { AuthContext } from './context/AuthContext'\r\nimport Loader from './components/Loader'\r\nimport CustomBreadcrumb from './components/BreadCrumb'\r\n\r\nfunction App() {\r\n  const {token, login, logout, userId, ready} = useAuth()\r\n  const isAuthenticated = !!token\r\n  const routes = useRoutes(isAuthenticated)\r\n\r\n  if(!ready){\r\n    return <Loader></Loader>\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider  value ={{\r\n      token, login, logout, userId, isAuthenticated\r\n    }}>\r\n      <Router>\r\n      <Navibar/>\r\n      {/* <CustomBreadcrumb /> */}\r\n        {isAuthenticated}\r\n          {routes}\r\n        </Router>\r\n      </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\routes.js",[],"C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\hooks\\auth.hook.js",[],"C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\components\\Loader.js",[],"C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\components\\BreadCrumb.js",["79"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Breadcrumb} from 'react-bootstrap'\r\nimport { useLocation } from 'react-router'\r\n\r\nexport default function CustomBreadcrumb (){\r\n    const location = useLocation()\r\n    \r\n    var links=[];\r\n\r\n    const ways = [\r\n        {path:'/home'},\r\n        {path:'/products'},\r\n        \r\n    ]\r\n\r\n    ways.map((nam, index)=>{\r\n        if (nam.path ==location.pathname){\r\n             links[index] = ways[index].path.substr(1)\r\n             links=links[index].split('/')          \r\n            return 0;\r\n        } else {\r\n            \r\n             links[index] = location.pathname.substr(1)\r\n            links=links[index].split('/')\r\n            return 0;\r\n        }\r\n    })\r\n    // console.log(1)\r\n   var cont=''\r\n    return(\r\n        <Breadcrumb>\r\n        {links.map((content)=>{\r\n            cont += '/' + content\r\n            return(\r\n                <Breadcrumb.Item className=\"text-capitalize\" href={cont}>{content}</Breadcrumb.Item>\r\n            )\r\n        })}\r\n        </Breadcrumb>\r\n    )\r\n}","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\components\\Navibar.js",["80","81"],"import React, { useContext } from 'react'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Nav, Navbar, Button} from 'react-bootstrap'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { NavLink, useHistory} from 'react-router-dom'\r\n\r\n\r\nexport default function Navibar() {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    \r\n    const logoutHandler = event =>{\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push('/')\r\n    }\r\n    if(auth.isAuthenticated){\r\n        return(\r\n    \r\n            // <h1>AuthPage </h1>\r\n            <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" bg=\"dark\">\r\n                <Navbar.Brand>Logo</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                    <Nav.Link ><NavLink to=\"/\">Home</NavLink></Nav.Link>\r\n                    <Nav.Link ><NavLink to=\"/cabinet\">Cabinet</NavLink></Nav.Link>\r\n                        <a  onClick={logoutHandler}><Nav.Link>logout</Nav.Link></a>\r\n                    </Nav>\r\n                    <Nav>\r\n                      <Button onClick={logoutHandler} variant=\"primary\" className=\"mr-2\">Logout</Button>\r\n                      <NavLink  to=\"/auth\"><Button variant=\"primary\" className=\"mr-2\" >Cabinet</Button></NavLink>  \r\n    \r\n                    </Nav> \r\n    \r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    } else{\r\n        return(\r\n    \r\n            // <h1>AuthPage </h1>\r\n            <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" bg=\"dark\">\r\n                <Navbar.Brand>Logo</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                    <Nav.Link ><NavLink to=\"/\">Home</NavLink></Nav.Link>\r\n                    <Nav.Link ><NavLink to=\"/cabinet\">Cabinet</NavLink></Nav.Link>\r\n                        <a  onClick={logoutHandler}><Nav.Link>logout</Nav.Link></a>\r\n                    </Nav>\r\n                    <Nav>\r\n                      <NavLink to=\"/auth\"><Button variant=\"primary\" className=\"mr-2\">Log in</Button></NavLink>  \r\n    \r\n                    </Nav> \r\n    \r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n\r\n    \r\n}","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\pages\\DetailPage.js",[],"C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\pages\\HomePage.js",["82","83","84"],"import React, { useCallback, useContext, useEffect, useState } from 'react'\r\nimport Loader from '../components/Loader'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport useHttp from '../hooks/http.hook'\r\nimport LinksList from '../components/LinksList'\r\nimport { Carousel , Row, Card, Col, Container, Button, InputGroup, FormControl} from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const HomePage = () => {\r\n    const {loading, request} = useHttp()\r\n    const {token} = useContext(AuthContext)\r\n    const [email, setEmail] = useState('')\r\n    const history = useHistory()\r\n\r\n    const emailHandler = event =>{\r\n        setEmail(event.target.value)\r\n    }\r\n    const sendEmailHandler = async() =>{\r\n        try{\r\n        await request('api/home/email','POST', {email:email},{\r\n            Authorization: `Bearer ${token}` \r\n        })\r\n        }catch(e){\r\n\r\n        }\r\n    }\r\n    const authorizationHandler = () =>{\r\n        // if(localStorage.getItem('userData')){\r\n        //     history.push('/create')\r\n        // } else{\r\n        //     history.push('/auth')\r\n        // }\r\n        history.push('auth')\r\n    }\r\n\r\n    if(loading){\r\n        return <Loader />\r\n    }\r\n\r\n    return(\r\n        <div style={{width:\"80%\", margin:\"auto\"}}>\r\n           <Carousel className=\"w-75  mt-3 container-fluid\">\r\n            <Carousel.Item >\r\n                <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://cv.dsoua.com/shared/uploads/crops/1/0005f0fc3f123d1f48d4e2c3e16be7ab_0.jpg\"\r\n                alt=\"First slide\"\r\n                />\r\n                <Carousel.Caption>\r\n                <h3>First slide label</h3>\r\n                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                </Carousel.Caption>\r\n            </Carousel.Item> <Carousel.Item>\r\n                <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://cv.dsoua.com/shared/uploads/crops/35/fd5e11309e71c4f0a41748c7480e2def_0.jpg\"\r\n                alt=\"First slide\"\r\n                />\r\n                <Carousel.Caption>\r\n                <h3>Second slide label</h3>\r\n                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                </Carousel.Caption>\r\n            </Carousel.Item>\r\n         </Carousel>\r\n         <Container fluid className=\"w-100 mt-3\">\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                <Row className=\"  justify-content-around ml-5\"  xs={2} md={2}>\r\n                \r\n                <Col className=\"mt-1\">   \r\n                        <Card style={{ width: '100%' }}>\r\n                            <Card.Body>\r\n                                <Card.Title >Подключить газ</Card.Title>\r\n                                <Card.Text>Как стать клиентом</Card.Text>\r\n                                <Card.Text>Присоединиться к газовым сетям</Card.Text>\r\n                                <Card.Text>Проложить сети</Card.Text>\r\n                                <Card.Link >Card Link</Card.Link>\r\n                                <Card.Link >Another Link</Card.Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"mt-1\">   \r\n                        <Card style={{ width: '100%' }}>\r\n                            <Card.Body>\r\n                                <Card.Title >Подключить газ</Card.Title>\r\n                                <Card.Text>Как стать клиентом</Card.Text>\r\n                                <Card.Text>Присоединиться к газовым сетям</Card.Text>\r\n                                <Card.Text>Проложить сети</Card.Text>\r\n                                <Card.Link >Card Link</Card.Link>\r\n                                <Card.Link >Another Link</Card.Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"mt-1\">   \r\n                        <Card style={{ width: '100%' }}>\r\n                            <Card.Body>\r\n                                <Card.Title >Подключить газ</Card.Title>\r\n                                <Card.Text>Как стать клиентом</Card.Text>\r\n                                <Card.Text>Присоединиться к газовым сетям</Card.Text>\r\n                                <Card.Text>Проложить сети</Card.Text>\r\n                                <Card.Link >Card Link</Card.Link>\r\n                                <Card.Link >Another Link</Card.Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col className=\"mt-1\">   \r\n                        <Card style={{ width: '100%' }}>\r\n                            <Card.Body>\r\n                                <Card.Title >Подключить газ</Card.Title>\r\n                                <Card.Text>Как стать клиентом</Card.Text>\r\n                                <Card.Text>Присоединиться к газовым сетям</Card.Text>\r\n                                <Card.Text>Проложить сети</Card.Text>\r\n                                <Card.Link >Card Link</Card.Link>\r\n                                <Card.Link >Another Link</Card.Link>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col> \r\n                </Row>\r\n                </Col>\r\n                <Col>\r\n                    <Container fluid>\r\n                        <Button variant=\"outline-primary\" className=\"mt-1\" onClick={authorizationHandler} style={{height : \"100px\"}}block>Authorization</Button>\r\n                        <Card className=\"mt-5\" style={{ width: '100%'}}>\r\n                            <Card.Body  style={{margin:\"auto\"}} >\r\n                                <Card.Title >Подписаться на рассылку</Card.Title>\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <InputGroup.Prepend>\r\n                                    </InputGroup.Prepend>\r\n                                    <FormControl\r\n                                    placeholder=\"E-mail\"\r\n                                    aria-label=\"E-mail\"\r\n                                    name=\"email\"\r\n                                    onChange={emailHandler}\r\n                                    />\r\n                                </InputGroup>\r\n                                <Button style={{ width: '100%'}} onClick={sendEmailHandler}>Отправить</Button>\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n    </Container>\r\n    </div>  \r\n    )\r\n}","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\pages\\AuthPage.js",["85","86"],"import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {  Button, Form, Jumbotron, Modal } from 'react-bootstrap'\r\nimport useHttp from '../hooks/http.hook'\r\nimport { AuthContext } from '../context/AuthContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Fon from '../resources/img/fon.jpg';\r\n\r\nexport const AuthPage = () => {\r\n    \r\n    \r\n    const [show, setShow] = useState(false)\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const {loading, error, request} = useHttp()\r\n    const [form, setForm] = useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n    \r\n    useEffect(()=>{\r\n        // alert(error)\r\n    }, [error])\r\n    const changeHandler = event => {\r\n        setForm({...form,[event.target.name]:event.target.value})\r\n    }\r\n    const registerHandler = async()=>{\r\n        try{\r\n            const data = await request('/api/auth/register', 'POST', {...form})\r\n            console.log(data)\r\n        }catch(e){\r\n            handleShow()\r\n        }\r\n    }\r\n    const loginHandler = async()=>{\r\n        try{\r\n            const data = await request('/api/auth/login', 'POST', {...form})\r\n            if(auth.login(data.token, data.userId)){\r\n                history.push('cabinet')\r\n            }\r\n        }catch(e){\r\n            handleShow()\r\n\r\n        }\r\n    }\r\n  \r\n    return(\r\n    \r\n        \r\n        <div className=\" d-flex container-fluid justify-content-center\" style={{\r\n            // backgroundColor:'red',\r\n            \r\n            }}>\r\n                \r\n            <Form className=\"bg-white shadow-lg rounded  p-4 mt-5\">\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={form.email} onChange={changeHandler}/>\r\n                    <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={form.password} onChange={changeHandler}/>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n                <Button variant=\"dark\" type=\"submit\" onClick={registerHandler} disabled={loading} className=\"mr-2\">\r\n                    Reg\r\n                </Button>\r\n                <Button variant=\"dark\" type=\"submit\" onClick={loginHandler} disabled={loading}>\r\n                    Log in\r\n                </Button>\r\n             </Form>\r\n            <Modal show={show} onHide={handleClose} animation={false}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Неверные данные</Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                </Modal.Footer>\r\n          </Modal>\r\n          </div>\r\n\r\n        \r\n    )\r\n}","C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\pages\\CabinetPage.js",["87"],"C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\hooks\\http.hook.js",[],"C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\components\\LinkCard.js",[],"C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\components\\LinksList.js",[],"C:\\Users\\an\\Documents\\GitHub\\Node-React_utilities\\client\\src\\components\\TableCard.js",["88","89","90","91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":18,"column":22,"nodeType":"102","messageId":"103","endLine":18,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":29,"column":25,"nodeType":"106","endLine":29,"endColumn":53},{"ruleId":"104","severity":1,"message":"105","line":51,"column":25,"nodeType":"106","endLine":51,"endColumn":53},{"ruleId":"96","severity":1,"message":"107","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":28},{"ruleId":"96","severity":1,"message":"108","line":1,"column":42,"nodeType":"98","messageId":"99","endLine":1,"endColumn":51},{"ruleId":"96","severity":1,"message":"109","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":17},{"ruleId":"96","severity":1,"message":"110","line":4,"column":25,"nodeType":"98","messageId":"99","endLine":4,"endColumn":34},{"ruleId":"96","severity":1,"message":"111","line":8,"column":8,"nodeType":"98","messageId":"99","endLine":8,"endColumn":11},{"ruleId":"96","severity":1,"message":"112","line":24,"column":23,"nodeType":"98","messageId":"99","endLine":24,"endColumn":27},{"ruleId":"96","severity":1,"message":"108","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"113","line":2,"column":27,"nodeType":"98","messageId":"99","endLine":2,"endColumn":33},{"ruleId":"96","severity":1,"message":"114","line":6,"column":12,"nodeType":"98","messageId":"99","endLine":6,"endColumn":17},{"ruleId":"96","severity":1,"message":"115","line":6,"column":19,"nodeType":"98","messageId":"99","endLine":6,"endColumn":27},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'CustomBreadcrumb' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'LinksList' is defined but never used.","'Jumbotron' is defined but never used.","'Fon' is defined but never used.","'data' is assigned a value but never used.","'Button' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]